//==============================================================================
//
//  @file       libsofa.common.xconfig
//  @brief      Xcode Config file 
//  @author     Thibaut Carpentier, UMR STMS 9912 - Ircam-Centre Pompidou / CNRS / UPMC
//  @date       10/05/2013
//
//==============================================================================

//==============================================================================
// COMMON DEFINITIONS
//==============================================================================
MACOSX_SDK_10_4                 = $(DEVELOPER_SDK_DIR)/MacOSX10.4u.sdk 
MACOSX_SDK_10_5                 = $(DEVELOPER_SDK_DIR)/MacOSX10.5.sdk 
MACOSX_SDK_10_6                 = $(DEVELOPER_SDK_DIR)/MacOSX10.6.sdk 
MACOSX_SDK_10_7                 = $(DEVELOPER_SDK_DIR)/MacOSX10.7.sdk 
MACOSX_SDK_10_8                 = $(DEVELOPER_SDK_DIR)/MacOSX10.8.sdk
MACOSX_SDK_10_9                 = $(DEVELOPER_SDK_DIR)/MacOSX10.9.sdk
MACOSX_SDK_10_10                = $(DEVELOPER_SDK_DIR)/MacOSX10.10.sdk
MACOSX_SDK_10_11                = $(DEVELOPER_SDK_DIR)/MacOSX10.11.sdk
MACOSX_SDK_10_12                = $(DEVELOPER_SDK_DIR)/MacOSX10.12.sdk

COPYRIGHT_TAG                   = Copyright Â© 2013-2017
ORGANIZATION_NAME               = Ircam
EXECUTABLE_PREFIX               =   

GCC_VERSION                     = com.apple.compilers.llvm.clang.1_0     ///< for Xcode 4

SDKROOT                         = macosx

MACOSX_DEPLOYMENT_TARGET        = $(RECOMMENDED_MACOSX_DEPLOYMENT_TARGET)
VALID_ARCHS                     = x86_64

//==============================================================================
// VERSION
//==============================================================================
PRODUCT_VERSION_MAJOR           = 1
PRODUCT_VERSION_MINOR           = 0
PRODUCT_VERSION_RELEASE         = 4
PRODUCT_VERSION                 = $(PRODUCT_VERSION_MAJOR).$(PRODUCT_VERSION_MINOR).$(PRODUCT_VERSION_RELEASE)

//==============================================================================
// PATHS
//==============================================================================
// Headers paths
NETCDF_SRC_PATH             =   $(SRCROOT)/../../dependencies/include

// Framework paths
FRAMEWORK_SEARCH_PATHS      =   

HEADER_SEARCH_PATHS         =   $(NETCDF_SRC_PATH)

// Library paths
NETCDF_LIB_PATH             =   $(SRCROOT)/../../dependencies/lib/macos

LIBRARY_SEARCH_PATHS        =   $(NETCDF_LIB_PATH) 

// Other paths
DELIVERY_PATH               =   $(SRCROOT)/../../lib
INFOPLIST_FILE              =   $(SRCROOT)/libsofa.plist

//==============================================================================
// PREPROCESSOR
//==============================================================================

//==============================================================================
// LINKER
//==============================================================================
NETCDF_LIB					=  $(NETCDF_LIB_PATH)/libnetcdf.a
NETCDF_CPP_LIB				=  $(NETCDF_LIB_PATH)/libnetcdf_c++4.a
HDF5HL_LIB					=  $(NETCDF_LIB_PATH)/libhdf5_hl.a
HDF5_LIB					=  $(NETCDF_LIB_PATH)/libhdf5.a
CURL_LIB                    =  $(NETCDF_LIB_PATH)/libcurl.a
Z_LIB						=  $(NETCDF_LIB_PATH)/libz.a

DEPENDENCIES_LIB            =  $(NETCDF_LIB) $(NETCDF_CPP_LIB) $(HDF5HL_LIB) $(HDF5_LIB) $(CURL_LIB) $(Z_LIB)

//==============================================================================
//==============================================================================
//==============================================================================
//==============================================================================
//==============================================================================
// YOU PROBABLY WONT NEED TO CHANGE WHAT COMES NEXT

ALWAYS_SEARCH_USER_PATHS        =   YES
BUILD_DIR                       =   $(SRCROOT)/build
PROJECT_TEMP_DIR                =   $(BUILD_DIR)
CONFIGURATION_TEMP_DIR          =   $(PROJECT_TEMP_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)
OBJROOT                         =   $(BUILD_DIR)
SYMROOT                         =   $(DELIVERY_PATH)
DEPLOYMENT_LOCATION             =   NO
DEPLOYMENT_POSTPROCESSING       =   NO
CONFIGURATION_BUILD_DIR         =   $(DELIVERY_PATH)
DSTROOT                         =   $(DELIVERY_PATH)
// (This next path is relative to DSTROOT)
INSTALL_PATH = /
DYLIB_CURRENT_VERSION           =   $(PRODUCT_VERSION)
DYLIB_COMPATIBILITY_VERSION     =   $(PRODUCT_VERSION)
FRAMEWORK_VERSION               =   $(PRODUCT_VERSION)

//==============================================================================
// Special Files
//==============================================================================
GENERATE_PKGINFO_FILE   =   YES
INFOPLIST_PREPROCESS    =   YES

//==============================================================================
// Packaging & Deployment
//==============================================================================
SKIP_INSTALL                                        =   YES
COPY_PHASE_STRIP                                    =   YES
STRIP_INSTALLED_PRODUCT                             =   YES
STRIP_STYLE                                         =   All Symbols
STANDARD_C_PLUS_PLUS_LIBRARY_TYPE                   =   dynamic
PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR    =   YES
PREBINDING                                          =   NO

//==============================================================================
// GCC Code Generation
//==============================================================================
GCC_PRECOMPILE_PREFIX_HEADER                =   NO
GCC_FAST_OBJC_DISPATCH                      =   YES
GCC_ENABLE_SSE3_EXTENSIONS                  =   YES
GCC_ENABLE_SUPPLEMENTAL_SSE3_INSTRUCTIONS   =   YES
GCC_ENABLE_SSE41_EXTENSIONS                 =   YES
GCC_ENABLE_SSE42_EXTENSIONS                 =   NO  ///< warning it seems that 'old' computers dont have SSE42 extensions

GCC_FAST_MATH                               =   NO

GCC_STRICT_ALIASING                         =   YES
GCC_THREADSAFE_STATICS                      =   NO
GCC_UNROLL_LOOPS                            =   YES
GCC_MODEL_TUNING                            =   G5
GCC_ALTIVEC_EXTENSIONS                      =   YES
GCC_ENABLE_ASM_KEYWORD                      =   YES
GCC_ENABLE_BUILTIN_FUNCTIONS                =   YES
GCC_ENABLE_CPP_EXCEPTIONS                   =   YES
GCC_ENABLE_CPP_RTTI                         =   YES
GCC_USE_GCC3_PFE_SUPPORT                    =   YES

GCC_SYMBOLS_PRIVATE_EXTERN                  =   YES
GCC_INLINES_ARE_PRIVATE_EXTERN              =   YES

GCC_AUTO_VECTORIZATION                      =   YES
OTHER_CFLAGS                                =
OTHER_CPLUSPLUSFLAGS                        =   $(OTHER_CFLAGS)
SEPARATE_STRIP                              =   NO
DEAD_CODE_STRIPPING                         =   YES

ZERO_LINK                                   =   NO

//==============================================================================
// WARNINGS
//==============================================================================
WARNING_CFLAGS                              =   -Wmost -Wno-four-char-constants -Wno-unknown-pragmas -Wno-reorder -Wno-unused-value -Wno-unused
GCC_WARN_64_TO_32_BIT_CONVERSION            =   YES
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS         =   YES
GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO       =   YES
GCC_WARN_ABOUT_MISSING_NEWLINE              =   YES
GCC_WARN_ABOUT_MISSING_PROTOTYPES           =   YES
GCC_WARN_ABOUT_POINTER_SIGNEDNESS           =   YES
GCC_WARN_ABOUT_RETURN_TYPE                  =   YES
GCC_WARN_CHECK_SWITCH_STATEMENTS            =   YES
GCC_WARN_EFFECTIVE_CPLUSPLUS_VIOLATIONS     =   YES
GCC_WARN_FOUR_CHARACTER_CONSTANTS           =   NO
GCC_WARN_UNKNOWN_PRAGMAS                    =   NO
GCC_WARN_UNUSED_FUNCTION                    =   NO
GCC_WARN_UNUSED_PARAMETER                   =   NO
GCC_WARN_UNUSED_VALUE                       =   NO
GCC_WARN_UNUSED_VARIABLE                    =   NO

//==============================================================================
// CLANG
//==============================================================================
COMBINE_HIDPI_IMAGES                        =   YES
CLANG_MODULES_AUTOLINK                      =   NO
CLANG_ENABLE_OBJC_ARC                       =   NO
CLANG_CXX_LIBRARY                           =   libc++   ///< requires >= 10.7 as target deployment


//==============================================================================
// CLANG Static Analyzer
//==============================================================================
RUN_CLANG_STATIC_ANALYZER                               =   NO

CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION               =   YES

CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER                =   YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_GETPW_GETS          =   YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_MKSTEMP             =   YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND                =   YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY              =   YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_UNCHECKEDRETURN     =   YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_VFORK               =   YES
CLANG_ANALYZER_SECURITY_KEYCHAIN_API                    =   YES

CLANG_ANALYZER_DEADCODE_DEADSTORES                      =   YES
CLANG_ANALYZER_GCD                                      =   YES
CLANG_ANALYZER_MALLOC                                   =   YES

CLANG_WARN_CXX0X_EXTENSIONS                             =   NO
CLANG_WARN__EXIT_TIME_DESTRUCTORS                       =   NO
GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO                   =   YES
GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS                       =   YES
GCC_WARN_NON_VIRTUAL_DESTRUCTOR                         =   YES
CLANG_WARN__DUPLICATE_METHOD_MATCH                      =   YES

